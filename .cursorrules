# Adventure Game Development Rules

## Code Style
- Use consistent indentation (2 spaces)
- Add descriptive comments for complex logic
- Keep functions focused and single-purpose
- Use clear variable names

## Testing Guidelines
- DO NOT run the game programmatically during development
- Test commands manually by running `python adventure_game.py` in terminal
- Verify each command works as expected before moving to next feature
- Check for edge cases (empty inventory, full inventory, etc.)

## Debugging
- Add debug prints when investigating issues
- Remove debug prints before finalizing code
- Test with fresh game sessions (no saved games)

## Common Commands to Test
1. `take` - Pick up weapons from rooms
2. `inventory` - View current weapons
3. `drop` - Drop weapons back to room
4. `attack` - Combat with enemies
5. `wear` - Pick up armor
6. `armor` - View armor inventory
7. `switch` - Change active weapon
8. `absorb` - Use life crystals
9. `buy` - Shop interactions
10. `open` - Chest interactions

## File Structure
- Main game logic in `adventure_game.py`
- Save files as `savegame.json`
- Keep backup of working versions

## Game Mechanics
- Max 3 weapons in inventory
- Max 2 armor pieces in inventory
- Weapons have durability that decreases with use
- Armor provides defense against enemy attacks
- Life crystals increase max HP
- Golden keys needed for locked chests 