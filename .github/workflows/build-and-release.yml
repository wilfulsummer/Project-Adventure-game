name: Build and Release Game

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.1.0, etc.
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        
    - name: Build executable
      run: |
        # Create a spec file that excludes mods from the build
        echo "# -*- mode: python ; coding: utf-8 -*-" > Adventure_Game.spec
        echo "a = Analysis(['main.py']," >> Adventure_Game.spec
        echo "             pathex=[]," >> Adventure_Game.spec
        echo "             binaries=[]," >> Adventure_Game.spec
        echo "             datas=[]," >> Adventure_Game.spec
        echo "             hiddenimports=[]," >> Adventure_Game.spec
        echo "             hookspath=[]," >> Adventure_Game.spec
        echo "             hooksconfig={}," >> Adventure_Game.spec
        echo "             runtime_hooks=[]," >> Adventure_Game.spec
        echo "             excludes=['mods']," >> Adventure_Game.spec
        echo "             win_no_prefer_redirects=False," >> Adventure_Game.spec
        echo "             win_private_assemblies=False," >> Adventure_Game.spec
        echo "             cipher=None," >> Adventure_Game.spec
        echo "             noarchive=False)" >> Adventure_Game.spec
        echo "pyz = PYZ(a.pure, a.zipped_data, cipher=None)" >> Adventure_Game.spec
        echo "exe = EXE(pyz," >> Adventure_Game.spec
        echo "          a.scripts," >> Adventure_Game.spec
        echo "          a.binaries," >> Adventure_Game.spec
        echo "          a.zipfiles," >> Adventure_Game.spec
        echo "          a.datas," >> Adventure_Game.spec
        echo "          []," >> Adventure_Game.spec
        echo "          name='Adventure_Game'," >> Adventure_Game.spec
        echo "          debug=False," >> Adventure_Game.spec
        echo "          bootloader_ignore_signals=False," >> Adventure_Game.spec
        echo "          strip=False," >> Adventure_Game.spec
        echo "          upx=True," >> Adventure_Game.spec
        echo "          upx_exclude=[]," >> Adventure_Game.spec
        echo "          console=True," >> Adventure_Game.spec
        echo "          disable_windowed_traceback=False," >> Adventure_Game.spec
        echo "          argv_emulation=False," >> Adventure_Game.spec
        echo "          target_arch=None," >> Adventure_Game.spec
        echo "          codesign_identity=None," >> Adventure_Game.spec
        echo "          entitlements_file=None)" >> Adventure_Game.spec
        
        # Build using the spec file
        pyinstaller Adventure_Game.spec
        
    - name: Create release assets
      run: |
        # Create the main game folder structure
        mkdir Adventure_Game_Release
        mkdir Adventure_Game_Release\mods
        mkdir Adventure_Game_Release\saves
        
        # Copy the executable
        copy dist\Adventure_Game.exe Adventure_Game_Release\
        
        # Copy essential files
        copy README.md Adventure_Game_Release\
        if (Test-Path "LICENSE") { copy LICENSE Adventure_Game_Release\ }
        
        # Copy mod installation guide
        copy mods\INSTALLATION_GUIDE.md Adventure_Game_Release\
        
        # Copy the entire mods folder structure
        echo "Copying mods folder contents..."
        xcopy mods\* Adventure_Game_Release\mods\ /E /I /Y
        
        # Ensure mods.json exists and includes developer mod by default
        if (!(Test-Path "mods\mods.json")) {
          echo '{"enabled_mods": ["developer_mod"]}' > Adventure_Game_Release\mods\mods.json
        } else {
          # Copy existing mods.json but ensure developer_mod is enabled
          copy mods\mods.json Adventure_Game_Release\mods\
          # Check if developer_mod is already in enabled_mods, if not add it
          powershell -Command "$config = Get-Content 'Adventure_Game_Release\mods\mods.json' | ConvertFrom-Json; if ('developer_mod' -notin $config.enabled_mods) { $config.enabled_mods += 'developer_mod'; $config | ConvertTo-Json -Depth 10 | Set-Content 'Adventure_Game_Release\mods\mods.json' }"
        }
        
        # Create a comprehensive installation guide
        echo "# Adventure Game v${{ github.ref_name }} Installation" > Adventure_Game_Release\INSTALL.md
        echo "" >> Adventure_Game_Release\INSTALL.md
        echo "## Quick Start:" >> Adventure_Game_Release\INSTALL.md
        echo "1. Extract this folder anywhere on your computer" >> Adventure_Game_Release\INSTALL.md
        echo "2. Run Adventure_Game.exe to play" >> Adventure_Game_Release\INSTALL.md
        echo "3. Save games are stored in the saves folder" >> Adventure_Game_Release\INSTALL.md
        echo "" >> Adventure_Game_Release\INSTALL.md
        echo "## Developer Mode:" >> Adventure_Game_Release\INSTALL.md
        echo "- Developer mode is ENABLED by default" >> Adventure_Game_Release\INSTALL.md
        echo "- Use 'dev_help' to see developer commands" >> Adventure_Game_Release\INSTALL.md
        echo "- Use 'dev_gold 1000' to get gold, 'dev_teleport 5' to teleport, etc." >> Adventure_Game_Release\INSTALL.md
        echo "" >> Adventure_Game_Release\INSTALL.md
        echo "## Modding Support:" >> Adventure_Game_Release\INSTALL.md
        echo "- Check the mods folder for available mods" >> Adventure_Game_Release\INSTALL.md
        echo "- Developer mod is included and enabled by default" >> Adventure_Game_Release\INSTALL.md
        echo "- Add new mods by placing them in the mods folder" >> Adventure_Game_Release\INSTALL.md
        echo "- Edit mods.json to enable/disable mods" >> Adventure_Game_Release\INSTALL.md
        echo "" >> Adventure_Game_Release\INSTALL.md
        echo "## Game Controls:" >> Adventure_Game_Release\INSTALL.md
        echo "- Type 'guide' for in-game help" >> Adventure_Game_Release\INSTALL.md
        echo "- Type 'help' for command list" >> Adventure_Game_Release\INSTALL.md
        echo "- Type 'mods' to see loaded mods" >> Adventure_Game_Release\INSTALL.md
        
        # Create a comprehensive mod installation guide
        echo "# Mod Installation Guide" > Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "## Included Mods:" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "- developer_mod: Developer tools and cheats (ENABLED by default)" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "- example_mod: Example mod showing all features (disabled by default)" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "## Installing New Mods:" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "1. Download a mod folder (e.g., 'my_mod')" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "2. Place it in this mods folder" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "3. Edit mods.json to add 'my_mod' to enabled_mods list" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "4. Restart the game" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "## Example mods.json:" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo '{' >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo '  "enabled_mods": ["developer_mod", "my_mod"]' >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo '}' >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "## Developer Mode Commands:" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "- dev_help: Show all developer commands" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "- dev_gold [amount]: Give yourself gold" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "- dev_teleport [floor]: Teleport to any floor" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        echo "- dev_heal: Restore all health/stamina/mana" >> Adventure_Game_Release\mods\MOD_INSTALL.md
        
        # Create release-assets folder for the zip
        mkdir release-assets
        
        # Create a ZIP file of the entire game folder
        powershell -Command "Compress-Archive -Path 'Adventure_Game_Release' -DestinationPath 'release-assets\Adventure_Game_Release.zip' -Force"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/Adventure_Game_Release.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: Adventure_Game_Executable
        path: dist/Adventure_Game.exe
